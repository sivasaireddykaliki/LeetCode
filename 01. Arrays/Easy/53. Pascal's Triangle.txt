118. Pascal's Triangle
Solved
Easy
Topics
Companies
Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:


 

Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
Example 2:

Input: numRows = 1
Output: [[1]]
 

Constraints:

1 <= numRows <= 30

Solution:

class Solution {
    public List<List<Integer>> generate(int numRows) {

        List<List<Integer>> result=new ArrayList<List<Integer>>();

        int rowCount=1;

        while(rowCount<=numRows)
        {
            List<Integer> elements = new ArrayList<Integer>();

            // loop to add elements in each row (each list of elements are added)
            for(int i=1;i<=rowCount;i++)
            {
                if(i==1 || i==rowCount)
                {
                    elements.add(1);
                }
                else
                {
                    // add previous list or row element values with indexes i and i-1 .
                    // List of indexing list.get().get()
                    
                  int value=result.get(rowCount-2).get(i-1) + result.get(rowCount-2).get(i-2);
                  // since indexing so extra -1 

                    elements.add(value); 
                  
                }
            }
            result.add(elements);
            rowCount++;
        }

        return result;
        
    }
}