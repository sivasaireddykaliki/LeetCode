1588. Sum of All Odd Length Subarrays
Easy
3.6K
281
Companies
Given an array of positive integers arr, return the sum of all possible odd-length subarrays of arr.

A subarray is a contiguous subsequence of the array.

 

Example 1:

Input: arr = [1,4,2,5,3]
Output: 58
Explanation: The odd-length subarrays of arr and their sums are:
[1] = 1
[4] = 4
[2] = 2
[5] = 5
[3] = 3
[1,4,2] = 7
[4,2,5] = 11
[2,5,3] = 10
[1,4,2,5,3] = 15
If we add all these together we get 1 + 4 + 2 + 5 + 3 + 7 + 11 + 10 + 15 = 58
Example 2:

Input: arr = [1,2]
Output: 3
Explanation: There are only 2 subarrays of odd length, [1] and [2]. Their sum is 3.
Example 3:

Input: arr = [10,11,12]
Output: 66
 

Constraints:

1 <= arr.length <= 100
1 <= arr[i] <= 1000

Solution:

class Solution {
    public int sumOddLengthSubarrays(int[] arr) {
        int total_sum=0;
        int sub_length=1;
        for(int i=sub_length;i<=arr.length;i=i+2)
        {
           // System.out.println("Length "+i+" sub array");
            for(int j=0;(j+i-1) < arr.length;j=j+1)
            {
                //System.out.println("j value = "+j);
                
                for(int k=j;k <= (j+i-1);k++)
                {
                    total_sum+=arr[k];

                  //  System.out.println("total_sum = "+total_sum+" K value = "+k+" array value= "+arr[k]);
                  //  break;
                }
                
                //System.out.print(j+i);
            }

        }
        return total_sum;
    }
}
