
Code
Testcase
Test Result
Test Result
1207. Unique Number of Occurrences
Solved
Easy
Topics
Companies
Hint
Given an array of integers arr, return true if the number of occurrences of each value in the array is unique or false otherwise.

 

Example 1:

Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.
Example 2:

Input: arr = [1,2]
Output: false
Example 3:

Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]
Output: true
 

Constraints:

1 <= arr.length <= 1000
-1000 <= arr[i] <= 1000

Solution:


class Solution {
    public boolean uniqueOccurrences(int[] arr) {
        Map<Integer,Integer> freqTable = new HashMap<Integer,Integer>();
        boolean unique=true;
        List<Integer> listNum= new ArrayList<>();
        for(int ele:arr)
        {
            if( (freqTable.get(ele)) == null)
            {
                freqTable.put(ele,1);
            }
            else
            {
                freqTable.put(ele,freqTable.get(ele)+1);
            }
        }

        // use set to check unique values in hash map
        Set<Integer> numSet = new HashSet<Integer>();

        // we iterate through each map entry through set of entries
        for(Map.Entry<Integer,Integer> entrySetElement : freqTable.entrySet())
        {
            // if add operation fails in hashSet ( duplicate found return false)
            // set.add() return false if duplicate found
            if(!(numSet.add(entrySetElement.getValue())))
            {
                return false;
            }
        }

    

       

        return unique;
    }
}

/*

    for(Integer key: freqTable.keySet())
        {
            listNum.add(freqTable.get(key));
        }

 //check uniqueness
        l1: for(int i=0;i<listNum.size();i++)
        {
            for(int j=0;j<listNum.size();j++)
            {
                if(i==j)
                    continue;
                else
                {
                    if( (listNum.get(i)) == (listNum.get(j)))
                    {
                        unique=false;
                        break l1;
                    }
                }
            }
        }

*/