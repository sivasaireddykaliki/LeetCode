119. Pascal's Triangle II
Solved
Easy
Topics
Companies
Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:


 

Example 1:

Input: rowIndex = 3
Output: [1,3,3,1]
Example 2:

Input: rowIndex = 0
Output: [1]
Example 3:

Input: rowIndex = 1
Output: [1,1]
 

Constraints:

0 <= rowIndex <= 33
 

Follow up: Could you optimize your algorithm to use only O(rowIndex) extra space?

Solution:

class Solution {
    public List<Integer> getRow(int rowIndex) {

        List<List<Integer>> result = new ArrayList<>();
        List<Integer> l= new ArrayList<>();
        int rowCount=1;
        int rows=rowIndex+1;

        while(rowCount<= rows)
        {
            // adding list of elements (row elements) in a list
            List<Integer> rowElements = new ArrayList<Integer>();
            for(int i=1;i<=rowCount;i++)
            {
                if(i==rowCount || i==1)
                    rowElements.add(1);
                else
                {
                    rowElements.add(result.get(rowCount-2).get(i-2)+result.get(rowCount-2).get(i-1));
                }
            }
            result.add(rowElements);
            rowCount++;
            //System.out.println("Result List: "+result);
        }

        return result.get(rowIndex);
        
    }
}