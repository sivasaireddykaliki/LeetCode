557. Reverse Words in a String III
Easy
5.8K
243
Companies
Given a string s, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.

 

Example 1:

Input: s = "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"
Example 2:

Input: s = "Mr Ding"
Output: "rM gniD"
 

Constraints:

1 <= s.length <= 5 * 104
s contains printable ASCII characters.
s does not contain any leading or trailing spaces.
There is at least one word in s.
All the words in s are separated by a single space.

Solution:

class Solution {
    public String reverseWords(String s) {
        String[] words=s.split(" ");
        // String[] reversedWords=new String[words.length];
        int end;
        String str="";
        String result="";
        // iterate words and insert each reversed word
        for(int i=0;i<words.length;i++)
        {
            str="";
            end=words[i].length()-1;
            while(end>=0)
            {
                str+=words[i].charAt(end);
                end--;
            }
            if(i==words.length-1)
                result+=str;
            else
                result=result+str+" ";
        }
        return result;
    }
}