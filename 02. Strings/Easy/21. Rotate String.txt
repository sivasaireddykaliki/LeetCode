796. Rotate String
Easy
3.4K
130
Companies
Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s.

A shift on s consists of moving the leftmost character of s to the rightmost position.

For example, if s = "abcde", then it will be "bcdea" after one shift.
 

Example 1:

Input: s = "abcde", goal = "cdeab"
Output: true
Example 2:

Input: s = "abcde", goal = "abced"
Output: false
 

Constraints:

1 <= s.length, goal.length <= 100
s and goal consist of lowercase English letters.

Solution:

class Solution {
    public boolean rotateString(String s, String goal) {
        // maximum possible shifts = s.length() (length of string) times
        // do first shift repeat till s.length() times. If matched return true else false
        char firstChar = s.charAt(0);
        String shiftString="";
        boolean result=false;
        String temp="";
        if(s.length()!=goal.length())
        {
            return false;
        }
        else
        {
            if(s.length()==1)
            {
                if(s.equals(goal))
                    result=true;
                else
                    result=false;
            }

            else
            {
                temp=new String(s);
                while(shiftString.equals(s)==false)
                {
                    shiftString="";
                    firstChar=temp.charAt(0);
                    for(int i=1;i<temp.length();i++)
                    {
                        shiftString+=temp.charAt(i);
                    }
                    shiftString+=firstChar;
                    if(shiftString.equals(goal))
                    {
                        result=true;
                        break;
                    }
                    temp=shiftString;
                    // System.out.println("String : "+shiftString);
                }
                
            }
        }
        return result;
    }
}