1684. Count the Number of Consistent Strings
Easy
1.6K
64
Companies
You are given a string allowed consisting of distinct characters and an array of strings words. A string is consistent if all characters in the string appear in the string allowed.

Return the number of consistent strings in the array words.

 

Example 1:

Input: allowed = "ab", words = ["ad","bd","aaab","baa","badab"]
Output: 2
Explanation: Strings "aaab" and "baa" are consistent since they only contain characters 'a' and 'b'.
Example 2:

Input: allowed = "abc", words = ["a","b","c","ab","ac","bc","abc"]
Output: 7
Explanation: All strings are consistent.
Example 3:

Input: allowed = "cad", words = ["cc","acd","b","ba","bac","bad","ac","d"]
Output: 4
Explanation: Strings "cc", "acd", "ac", and "d" are consistent.
 

Constraints:

1 <= words.length <= 104
1 <= allowed.length <= 26
1 <= words[i].length <= 10
The characters in allowed are distinct.
words[i] and allowed contain only lowercase English letters.

Solution:

class Solution {
    public int countConsistentStrings(String allowed, String[] words) {
        
        int count=0;
        boolean consistent=true;
        boolean match=false;
        for(int i=0;i<words.length;i++)
        {
            // check each character in word with "allowed" string

            // iterate through words[i] and see if matching charater found in "allowed" string
            consistent=true;
            for(int j=0;j<words[i].length();j++)
            {
                match=false;
                for(int k=0;k<allowed.length();k++)
                {
                    if(allowed.charAt(k) == (words[i].charAt(j)))
                    {
                        match=true;
                        continue;
                    }
                }
                if(match==false) // if a given index character not matched. It is inconsistent string. Break the              loop and move to next word
                    break;
            }
            if(match==false)
            {
                continue;
            }
            else
            {
                count++;
            }
        }
        return count;
    }
}